// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Reservation.Models;

namespace Reservation.Migrations
{
    [DbContext(typeof(ReservationContext))]
    [Migration("20210508074653_InitialDB")]
    partial class InitialDB
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Reservation.Models.FoodList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FoodType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("FoodList");
                });

            modelBuilder.Entity("Reservation.Models.ReservationTable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("FoodTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PepoleNumber")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ReservationDate")
                        .HasColumnType("date");

                    b.Property<int?>("TableNo")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FoodTypeId");

                    b.HasIndex("UserId");

                    b.ToTable("ReservationTable");
                });

            modelBuilder.Entity("Reservation.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Username")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("Reservation.Models.ReservationTable", b =>
                {
                    b.HasOne("Reservation.Models.FoodList", "FoodType")
                        .WithMany("ReservationTables")
                        .HasForeignKey("FoodTypeId")
                        .HasConstraintName("FK_ReservationTable_FoodTypes");

                    b.HasOne("Reservation.Models.User", "User")
                        .WithMany("ReservationTables")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_ReservationTable_User");

                    b.Navigation("FoodType");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Reservation.Models.FoodList", b =>
                {
                    b.Navigation("ReservationTables");
                });

            modelBuilder.Entity("Reservation.Models.User", b =>
                {
                    b.Navigation("ReservationTables");
                });
#pragma warning restore 612, 618
        }
    }
}
